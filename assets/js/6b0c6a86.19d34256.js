"use strict";(self.webpackChunkdigicard_docs=self.webpackChunkdigicard_docs||[]).push([[3293],{2352:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var n=i(4848),s=i(8453);const r={id:"software-architecture",title:"Architecture Logicielle",sidebar_label:"Architecture Logicielle"},c="Architecture logicielle",o={id:"doc-technique/software-architecture",title:"Architecture Logicielle",description:"L'application DigiCard utilise une architecture bas\xe9e sur React Native pour le frontend et Node.js pour le backend. Les donn\xe9es des scans sont stock\xe9es dans une base de donn\xe9es PostgreSQL, tandis que la v\xe9rification des URLs est effectu\xe9e via l'API VirusTotal.",source:"@site/docs/doc-technique/software-architecture.md",sourceDirName:"doc-technique",slug:"/doc-technique/software-architecture",permalink:"/Documentation-Digicard-Qr-Code-Scanner/docs/doc-technique/software-architecture",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/doc-technique/software-architecture.md",tags:[],version:"current",frontMatter:{id:"software-architecture",title:"Architecture Logicielle",sidebar_label:"Architecture Logicielle"},sidebar:"tutorialSidebar",previous:{title:"Conception UX",permalink:"/Documentation-Digicard-Qr-Code-Scanner/docs/doc-technique/ux-design"},next:{title:"Conception technique",permalink:"/Documentation-Digicard-Qr-Code-Scanner/docs/doc-technique/technical-design"}},a={},d=[{value:"Composants principaux",id:"composants-principaux",level:2},{value:"Diagrammes",id:"diagrammes",level:2}];function l(e){const t={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"architecture-logicielle",children:"Architecture logicielle"})}),"\n",(0,n.jsx)(t.p,{children:"L'application DigiCard utilise une architecture bas\xe9e sur React Native pour le frontend et Node.js pour le backend. Les donn\xe9es des scans sont stock\xe9es dans une base de donn\xe9es PostgreSQL, tandis que la v\xe9rification des URLs est effectu\xe9e via l'API VirusTotal."}),"\n",(0,n.jsxs)(t.p,{children:["L'architecture de ",(0,n.jsx)(t.strong,{children:"QRCODEAPP"})," suit une approche ",(0,n.jsx)(t.strong,{children:"MVC"})," (Mod\xe8le-Vue-Contr\xf4leur) pour s\xe9parer la logique m\xe9tier de l'interface utilisateur."]}),"\n",(0,n.jsx)(t.h2,{id:"composants-principaux",children:"Composants principaux"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Frontend (React Native)"})," : Interface utilisateur et logique de navigation."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Backend (Node.js)"})," : Serveur de v\xe9rification et stockage des scans."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Base de donn\xe9es (PostgreSQL)"})," : Stockage des scans et des param\xe8tres utilisateur.\r\ne Donn\xe9es :** Utilisation de MongoDB pour stocker les donn\xe9es des utilisateurs et des scans."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"API :"})," Utilisation de l'API VirusTotal pour v\xe9rifier la s\xe9curit\xe9 des liens."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"diagrammes",children:"Diagrammes"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Diagramme de Composants :"})," D\xe9crit les diff\xe9rents composants de l'application et leurs interactions."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Diagramme de S\xe9quence :"})," D\xe9crit les interactions entre les composants pour les principales fonctionnalit\xe9s (scan, v\xe9rification de s\xe9curit\xe9, etc.)."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>c,x:()=>o});var n=i(6540);const s={},r=n.createContext(s);function c(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);